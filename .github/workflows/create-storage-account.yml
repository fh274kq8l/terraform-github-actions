name: "Create Storage Account"

on:
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: "A GitHub Environment to pull action secrets from"
        required: true
        type: environment
      REGION:
        description: "The Azure region to deploy to"
        type: string
        required: true
        default: westeurope
      TF_BACKEND_STORAGE_ACCOUNT:
        description: "The Azure Storage Account name"
        type: string
        required: true
        default: ""
      TF_BACKEND_RSG:
        description: "The resource group name"
        type: string
        required: true
        default: ""

env:
  AZURE_CREDENTIALS: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}", "subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}", "tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
  event_sha: +refs/pull/${{ github.event.issue.number }}/merge
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ENVIRONMENT: "${{ github.repository }}/${{ github.ref_name }}-${{ github.event.inputs.ENVIRONMENT }}"


permissions:
  id-token: write
  contents: read

jobs:
  deploy-storage-account:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.ENVIRONMENT }}
    outputs:
      prefix: ${{ steps.test.outputs.PREFIX }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

        # OIDC auth is not supported until TF AzureRM 3.7.0 onwards
      - name: Azure Login
        uses: Azure/login@v1.4.6
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Create Resource Group and Storage Account for TF State
        if: ${{ github.event.inputs.TF_BACKEND_STORAGE_ACCOUNT != '' }}
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az group create -l ${{ github.event.inputs.REGION }} -n ${{ env.TF_BACKEND_RSG }}
            az storage account create -n ${{ github.event.inputs.TF_BACKEND_STORAGE_ACCOUNT }} -g ${{ env.TF_BACKEND_RSG }} -l ${{ github.event.inputs.REGION }} --sku Standard_LRS --https-only $true --min-tls-version TLS1_2
            az storage container create -n tfstate --account-name ${{ github.event.inputs.TF_BACKEND_STORAGE_ACCOUNT }}

